name: 'Fetch Oro Rust Toolchain'
description: 'Fetches the latest Rust toolchain for the Oro operating system'
inputs:
  name:
    description: 'The rustup toolchain name, i.e. the "oro-dev" in "cargo +oro-dev build"'
    required: false
    default: oro-dev
  path:
    description: 'The path within which to extract the toolchain'
    required: false
    default: ../oro-toolchain
  github_token:
    description: 'The GitHub token to use for fetching the artifact'
    required: false
    default: ${{ github.token }}
  base_toolchain:
    description: 'The base toolchain to use for installing the toolchain (see dtolnay/rust-toolchain)'
    required: false
    default: nightly
  components:
    description: 'Base components to install with the toolchain'
    required: false
    default: rustfmt, clippy, rustc-dev, rust-src, llvm-tools-preview
  set_default:
    description: 'Whether to set the fetched toolchain as the default'
    required: false
    default: true
runs:
  using: 'composite'
  steps:
    - name: 'Install dependencies'
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y lld
    - name: 'Install Rust base toolchain'
      uses: dtolnay/rust-toolchain@v1
      with:
        toolchain: ${{ inputs.base_toolchain }}
        components: ${{ inputs.components }}
    - name: 'Fetch toolchain artifact'
      uses: dawidd6/action-download-artifact@v8
      with:
        path: ${{ inputs.path }}
        if_no_artifact_found: fail
        search_artifacts: true
        name_is_regexp: true
        name: 'oro-rust-toolchain-[0-9]+'
        workflow_search: true
        repo: oro-os/toolchain
        branch: master
        allow_forks: false
        github_token: ${{ inputs.github_token }}
    - name: 'Install rustup toolchain'
      shell: bash
      run: $GITHUB_ACTION_PATH/install-oro-toolchain.sh
      env:
        ORO_TOOLCHAIN_PATH: ${{ inputs.path }}
        ORO_TOOLCHAIN_NAME: ${{ inputs.name }}
        GITHUB_ACTION_PATH: ${{ github.action_path }}
    - name: 'Set default toolchain'
      shell: bash
      if: ${{ inputs.set_default }}
      run: rustup default ${{ inputs.name }}